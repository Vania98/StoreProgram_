// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StoreProgram_.Data;

#nullable disable

namespace StoreProgram_.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("StoreProgram_.Model.Basket", b =>
                {
                    //Використовуються методи Property для визначення властивостей кожної моделі (таблиці). Наприклад, Basket та Client
                    //визначаються з їх властивостями, такими як BasketID, ClientID, ClientName, NumberPhone, ProductName, Quantity і Price.
                    //Тут встановлюються типи даних, обмеження на довжину, а також інші характеристики стовпців у базі даних.
                    b.Property<int>("BasketID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BasketID"));

                    b.Property<int>("ClientID")
                        .HasMaxLength(100)
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");
                    //Використовується метод HasKey для визначення ключа кожної таблиці.
                    b.HasKey("BasketID");

                    b.HasIndex("ClientID");

                    b.ToTable("Baskets");
                });

            modelBuilder.Entity("StoreProgram_.Model.Client", b =>
                {
                    b.Property<int>("ClientID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClientID"));

                    b.Property<string>("ClientName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NumberPhone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("ClientID");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("StoreProgram_.Model.Basket", b =>
                {
                    //Використовується метод HasOne для визначення зв'язку між таблицями. Наприклад, зв'язок між Basket та Client
                    //встановлюється через зовнішній ключ ClientID.
                    b.HasOne("StoreProgram_.Model.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });
#pragma warning restore 612, 618
        }
    }
}
